@page "/Projects"
@inject IJSRuntime JsRuntime
@inject IDialogService DialogService


<MudGrid style="color: purple">
 <MudItem xs="12" sm="4">
            <MudCard>
                <MudCardMedia Image="images/Projects/gyxiLogo.png" Height="250"/>
                <MudCardContent>
                    <MudText Color="Color.Tertiary" Typo="Typo.h5">Gyxi</MudText>
                    <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in Blazor with MudBlazor.</MudText>
                    <MudText Style="color: mediumpurple" Typo="Typo.body2">Blazor WebApp with token authentication and webAPI integration.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("Gyxi"))">Learn More</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    <MudItem xs="12" sm="4">
            <MudCard>
                <MudCardMedia Image="images/Projects/weddingInv.webp" Height="250"/>
                <MudCardContent>
                    <MudText Color="Color.Tertiary" Typo="Typo.h5">WeddingInvitation</MudText>
                    <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in Blazor with MudBlazor.</MudText>
                    <MudText Style="color: mediumpurple" Typo="Typo.body2">Blazor WebApp with API project and GoogleSheets as Database.</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton OnClick="@(() => Code("WeddingInvitation"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("WeddingInvitation"))">Learn More</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/lizzy.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">ProjectLizzy</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core with DevExtreme</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">DevExtreme Library, MVC Project with SQL Server Database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("ProjectLizzy"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/camilla.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">ProjectCamilla</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core with DevExtreme</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">DevExtreme Library, MVC Project with SQL Server Database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("ProjectCamilla"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/recipe.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">ProjectCooking</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core and Blazor</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Blazor WebAssebly, Web API and POSTGRESQL Database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("ProjectCooking"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/house.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">HiddenVillaProject</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core and Blazor</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Blazor Project with Database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("HiddenVillaProject"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("HiddenVillaProject"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/discord.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">Botcraft</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in C# and key.NET</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Used Discord.Net Library</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("Botcraft"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("Botcraft"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >

    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/books.webp"  Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">BulkyBookProject</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">MVC Project with Database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("BulkyBookProject"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("BulkyBookProject"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/chip.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">ArduinoProject</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Arduino IDE</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Overwrote a fitness tracker chip.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("ArduinoProject"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/bitcoin.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">Crowdfund</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">MVC Project with database.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("Crowdfund"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("Crowdfund"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/footprint.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">Wolftrack</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in .Net Core</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Web API Project.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("Wolftrack"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("Wolftrack"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
    <MudItem xs="12" sm="4">
        <MudCard >
            <MudCardMedia Height="250" Image="images/Projects/discordjs.webp"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">DiscordBot</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Coded in Javascript</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Used Discord.JS Library</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("DiscordBot"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="@(() => Click("DiscordBot"))">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="4">
        <MudCard>
            <MudCardMedia Image="images/Projects/htmlcss.webp" Height="250"/>
            <MudCardContent>
                <MudText Color="Color.Tertiary" Typo="Typo.h5">ThemingProject</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">HTML and CSS</MudText>
                <MudText Style="color: mediumpurple" Typo="Typo.body2">Static HTML page</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton OnClick="@(() => Code("ThemingProject"))" Variant="Variant.Text" Color="Color.Info">Code</MudButton>
                <MudButton OnClick="@(() => Click("ThemingProject"))" Variant="Variant.Text" Color="Color.Info">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem >
</MudGrid>

@code {
    [CascadingParameter(Name = "theme")]
    protected string theme { get; set; }
    private async Task Code(string name)
    {
        switch (name)
        {
            case "ThemingProject":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/ThemingProject", "_blank");
                break;
            case "HiddenVillaProject":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/HiddenVilla", "_blank");
                break;
            case "Botcraft":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/Botcraft", "_blank");
                break;
            case "BulkyBookProject":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/BulkyBookDone", "_blank");
                break;
            case "Crowdfund":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/Crowdfund", "_blank");
                break;
            case "DiscordBot":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/DiscScript", "_blank");
                break;
            case "Wolftrack":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/MrSpyretos/Wolftrack", "_blank");
                break;
            case "WeddingInvitation":
                await JsRuntime.InvokeAsync<object>("open", "https://github.com/Spylak/WeddingInvitation", "_blank");
                break;
        }
    }

    private Dictionary<string, string> popOverContent = new Dictionary<string, string>()
    {
        
        {"ThemingProject", "This is a static page project that demonstrates Pixel Perfect UI/UX Design, given a set of images in Figma I had to replicate that in HTML and CSS."},
        {"Gyxi", "This is a C# .Net 6 Blazor WebAssembly app using MudBlazor and MVU architecture."},
        {
            "WeddingInvitation", "This is a project that is meant to be used for wedding invitations in digital form. It consists of a web app in Blazor WebAssembly, an API in .Net 6 and as a database there is an integration google sheets API. "+
                                 "It uses CI/CD through Github Actions and it is hosted in Azure, the API project as App Service and the client web app as Static Web App Service (since it's SPA)."
        },
        {"ProjectLizzy","This ia a ticketing system with custom integration for AzDo for tracking and submission of tickets (requests, incidents etc.), creating tickets in the project results in creating the appropriate ticket category in Azure DevOps."},
        {
            "ProjectCamilla", "This is a project I was placed to in my first job.I was responsible for parts of it's maintenance as well as adding some features. It is an MVC project " +
                              "consisting of the main application, a WEB API app taking care of external calls and a worker app. It is written in .Net Core, JavaScript and jQuery" +
                              " along with DevExtreme library. " +
                              "In this project I gained experience on CI/CD, remote desktop functionalities, Azure DevOps and SQL Server Database."
        },
        {
            "ProjectCooking", "This is a personal project I develop on my free time, at the moment it consists of 2 Libraries(one for the DTOs and one for the Database Entities), " +
                              "a front end application on Blazor WASM and a WEB API project that takes cares of the business logic with repository pattern" +
                              " JWT Authentication and 2FA via email, Custom Google SignIn and email verification as well as ASP.NET Identity, using MudBlazor library. "
        },
        {"HiddenVillaProject", "A .Net Web solution using Blazor Server & WebAssembly with WEB API project and repository pattern, Radzen Blazor library and Stripe Payments"},
        {"Botcraft", "A discord bot written in C# and .NET with APIs for Reddit, Youtube and Oxford Dictionary."},
        {"Crowdfund", "A prototype site with MVC pattern in ASP.NET, CRUD operations built in CodeAcademy."},
        {
            "BulkyBookProject", "A prototype ecommerce site for book sales with MVC architecture and unit of work" +
                                " pattern, API for email notifications, Ajax calls for datatables,built during ASP.NET Specialization course."
        },
        {"DiscordBot", "This was a discord bot with simple functionalities for discord server administrators written in Javascript and Node.js"},
        {"Wolftrack", "A backend CRUD application with Geolocation API in .NET Core."},
        {
            "ArduinoProject", "This was my first introduction to scrum-like schedule in professional ground, the goal of my project was to change the " +
                              "functionality of a Fitness Tracker board using Arduino IDE, changing the source code of a related" +
                              "project in order to validate and replicate it’s behavior, transforming it into an optical density device for liquids."
        }
    };

    private async Task Click(string name)
    {
        var parameters = new DialogParameters();
        parameters.Add("Title", name);
        parameters.Add("ContentText", popOverContent[name]);

        var options = new DialogOptions() {CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true};
        DialogService.Show<Dialog>("", parameters, options);
    }

}