@using BlazorWebCV.Models
@inject IJSRuntime _jsRuntime

<MudText Typo="Typo.h6" Class="px-4" Style="text-align: center">Navigation</MudText>
<MudDivider Style="flex-grow: 0"></MudDivider>
<MudList Clickable="true" Class="my-2">
    @foreach (var item in NavMenuItems.SkipLast(1))
    {
        <MudListItem Text="@item.Text" OnClick="@(() => OnClick(item.Section))" Icon="@item.Icon" IconColor="MudBlazor.Color.Default"/>
    }
    
</MudList>
<MudSpacer></MudSpacer>
<MudText Style="color : dodgerblue;cursor: pointer"
         @onclick="@(() => OnClick(NavMenuItems.Last().Section))"
         Typo="Typo.body2"
         Class="px-4">@NavMenuItems.Last().Text</MudText>

@code {

    [CascadingParameter(Name = "theme")]
    protected string Theme { get; set; }

    private string Color { get; set; }
    protected override void OnParametersSet()
    {
        Color = Theme == "dark" ? "dimgray" : "#bfbbbb";
        base.OnParametersSet();
    }
    private List<LeftNavMenuItem> NavMenuItems { get; set; } 
    protected override void OnInitialized()
    {
        NavMenuItems = new ()
        {
            new ()
            {
                Text = "Profile",
                Section = SectionModel.Profile,
                Classes = "navMenuActive",
                Icon = Icons.Material.Filled.AssignmentInd
            },
            new ()
            {
                Text = "Experience",
                Section = SectionModel.Experience,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Work
            },
            new ()
            {
                Text = "Projects",
                Section = SectionModel.Projects,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Dns
            },
            new ()
            {
                Text = "Toolkit",
                Section = SectionModel.Tools,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.HomeRepairService
            },
            new ()
            {
                Text = "Skills",
                Section = SectionModel.Skills,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Extension
            },
            new ()
            {
                Text = "Certifications",
                Section = SectionModel.Certifications,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Task
            },
            new ()
            {
                Text = "Interests",
                Section = SectionModel.Interests,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Interests
            },
            new ()
            {
                Text = "In Progress",
                Section = SectionModel.InProgress,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Downloading
            },
            new ()
            {
                Text = "Contact",
                Section = SectionModel.Contact,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.PermPhoneMsg
            },
            new ()
            {
                Text = $"Copyright @{DateTime.Now.Year}",
                Section = SectionModel.Copyright,
                Classes = "navMenuInActive",
                Icon = ""
            },
        };
    }

    private async Task OnClick(string section)
    {
        await _jsRuntime.InvokeVoidAsync("blazorExtensions.ScrollToElementId", section);
    }
}