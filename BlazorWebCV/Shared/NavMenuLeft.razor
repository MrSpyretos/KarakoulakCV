@using BlazorWebCV.Models
@inject NavigationManager navMan
@inject IJSRuntime _jsRuntime

<MudText Typo="Typo.h6" Class="px-4">Navigation</MudText>
<MudList Clickable="true" Class="my-2">
    @foreach (var item in NavMenuItems)
    {
        <MudListItem Style="@(item.Section.Equals(SectionModel.Copyright)?"color : dodgerblue":"")" Text="@item.Text" OnClick="@(() => OnClick(item.Section))" Icon="@item.Icon" IconColor="Color.Default"/>
    }
</MudList>
@code {

    [CascadingParameter(Name = "theme")]
    protected string theme { get; set; }

    private string color { get; set; }
    protected override void OnParametersSet()
    {
        color = theme == "dark" ? "dimgray" : "#bfbbbb";
        base.OnParametersSet();
    }
    private class NavMenuItem
    {
        public  string Text { get; set; }
        public  string Section { get; set; }
        public  string Classes { get; set; }
        public  string Icon { get; set; }
    }
    private List<NavMenuItem> NavMenuItems { get; set; } 
    protected override void OnInitialized()
    {
        NavMenuItems = new List<NavMenuItem>()
        {
            new NavMenuItem()
            {
                Text = "Profile",
                Section = SectionModel.Profile,
                Classes = "navMenuActive",
                Icon = Icons.Material.Filled.AssignmentInd
            },
            new NavMenuItem()
            {
                Text = "Experience",
                Section = SectionModel.Experience,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Work
            },
            new NavMenuItem()
            {
                Text = "Projects",
                Section = SectionModel.Projects,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Dns
            },
            new NavMenuItem()
            {
                Text = "Toolkit",
                Section = SectionModel.Tools,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.HomeRepairService
            },
            new NavMenuItem()
            {
                Text = "Skills",
                Section = SectionModel.Skills,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Extension
            },
            new NavMenuItem()
            {
                Text = "Certifications",
                Section = SectionModel.Certifications,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Task
            },
            new NavMenuItem()
            {
                Text = "Interests",
                Section = SectionModel.Interests,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Interests
            },
            new NavMenuItem()
            {
                Text = "In Progress",
                Section = SectionModel.InProgress,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.Downloading
            },
            new NavMenuItem()
            {
                Text = "Contact",
                Section = SectionModel.Contact,
                Classes = "navMenuInActive",
                Icon = Icons.Material.Filled.PermPhoneMsg
            },
            new NavMenuItem()
            {
                Text = $"Copyright @{DateTime.Now.Year}",
                Section = SectionModel.Copyright,
                Classes = "navMenuInActive",
                Icon = ""
            },
        };
    }

    private async void OnClick(string section)
    {
        // foreach (var item in NavMenuItems)
        // {
        //     item.Classes = item.Section.Equals(section) ? "navMenuActive" : "navMenuInActive";
        // }
        await _jsRuntime.InvokeVoidAsync("blazorExtensions.ScrollToElementId", section);
    }
}