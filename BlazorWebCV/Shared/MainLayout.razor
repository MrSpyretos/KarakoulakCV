@using MudBlazor.Utilities
@inherits LayoutComponentBase
@inject NavigationManager navMan
<MediaQueryList>
<MudThemeProvider Theme="currentTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer/>
        <b style="cursor: pointer;" @onclick="Click" > <MudText Typo="Typo.h4"  >Karakoulak Spyridon</MudText></b>
        <MudSpacer />
        <MudFab Size="Size.Small" OnClick="@((e) => DarkMode())" Icon="@Icons.Material.Filled.WbSunny" IconColor="color" Style="background-color: gray"></MudFab>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <CascadingValue Value="@theme" Name="theme">
        <NavMenuLeft/>
                </CascadingValue>
    </MudDrawer>
    <MudMainContent Style="overflow: hidden" >
        <CascadingValue Value="@theme" Name="theme">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>
</MediaQueryList>
@code{
    protected override async  void OnInitialized()
    {
        currentTheme = darkTheme;
        color = Color.Inherit;
    }

    private void Click()
    {
        navMan.NavigateTo("/");
    }
    void DarkMode()
    {
        if (currentTheme == defaultTheme)
        {
            currentTheme = darkTheme;
            theme = "dark";
            color = Color.Inherit;
            StateHasChanged();
        }
        else
        {
            currentTheme = defaultTheme;
            theme = "light";
            color = Color.Dark;
            StateHasChanged();
        }
    }
    
    Color color = Color.Success;
    MudTheme currentTheme = new MudTheme();
    MudTheme defaultTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#272c34",
            AppbarBackground = "#32333d"
        }
    };

    private string theme = "dark";
    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(93, 255, 0, 1)",
            DrawerIcon = "rgba(93, 255, 0, 1)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(93, 255, 0, 1)",
            TextPrimary = "rgba(93, 255, 0, 1)",
            TextSecondary = "rgba(93, 255, 0, 1)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(93, 255, 0, 0.4)",
            DividerLight = "rgba(93, 255, 0, 0.4)",
            TableLines = "rgba(93, 255, 0, 1)",
            LinesDefault = "rgba(93, 255, 0, 1)",
            LinesInputs = "rgba(93, 255, 0, 0.4)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        }
    };
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;

    }
}